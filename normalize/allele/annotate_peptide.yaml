
class: sifter

name: annotatedAlleleEffect
outdir: ../../output/allele

config:
  AEPath: ../../output/allele/annotatedAllele.alleleEffect.AlleleEffect.json.gz
  uniprotFeatures: ../../tables/uniprot_features.features.final.json.gz
  schema: ../../schema/

inputs:
  alleleEffects:
    jsonLoad:
      input: '{{config.AEPath}}'

pipelines:
  transform:
    - from: alleleEffects
    # TODO: this doesn't really do anything useful. The Uniprot domains need to be worked on 
    - intervalIntersect:
        json:
          input: "{{config.uniprotFeatures}}"
          start: start
          end: end
          match: transcript
        start: aa_position
        end: aa_position
        match: ensembl_transcript
        field: features
    - map:
        method: fix
        gpython: |
          def fix(row):
            if 'ensembl_transcript' in row:
              row['ensembl_transcript'] = [{'id': row['ensembl_transcript']}]
            if 'ensembl_gene' in row:
              row['ensembl_gene'] = [{'id': row['ensembl_gene']}]
            return row
    - objectValidate:
        schema: "{{config.schema}}"
        title: AlleleEffect
    - emit:
        name: AlleleEffect


class: sifter

name: pfam_family
outdir: ../../output/pfam/

config:
  xmlDir: ../../source/pfam/xmls/
  schema: ../../src/bmeg/bmeg-dictionary/gdcdictionary/schemas/

inputs:
  pfamData:
    glob:
      input: "{{config.xmlDir}}/*.xml"
      xmlLoad: {}


pipelines:
  transform:
    - from: pfamData
    - fieldProcess:
        field: pfam
    - map:
        method: adjust
        gpython: |
          def adjust(x):
            clan = []
            x["pfam_id"] = x["entry"]["-id"]
            x["submitter_id"] = x["entry"]["-id"]
            x["accession"] = x["entry"]["-accession"]
            x["comments"] = x["entry"].get("comment", "")
            x["description"] = x["entry"]["description"]
            x["project_id"] = "Reference"
            x["type"] = "PfamFamily"

            goterms = []
            if "go_terms" in x["entry"]:
              for a in x["entry"]["go_terms"]["category"]:
                if isinstance(a, dict) and isinstance(a["term"], dict):
                  goterms.append( a["term"]["-go_id"] )
            x["gene_ontology_terms"] = goterms

            if "clan_membership" in x["entry"] and "-clan_acc" in x["entry"]["clan_membership"]:
              clan.append( x["entry"]["clan_membership"]["-clan_acc"] )
            x["pfam_clans"] = clan
            #x["comments"] = x["comments"].strip()
            return x

    - emit:
        name: debug

    - objectCreate:
        class: pfam_family
        schema: "{{config.schema}}"

    - emit:
        name: pfam


class: sifter
name: GDSC_Transform
outdir: ../../output/gdsc

config:
  expFile: ../../source/gdsc/Cell_line_RMA_proc_basalExp.txt
  schema: ../../schema
  hugoFile: ../../source/hugo/hugo.tsv

inputs:
  geneRead:
    transposeLoad:
      input: "{{config.expFile}}"


pipelines:
  transform:
    - from: geneRead
    - project:
        mapping:
          id: "{{row.GENE_SYMBOLS}}"
    - map:
        method: fix
        gpython: |
          def fix(row):
            values= {}
            for k, v in row.items():
              if k not in ["GENE_SYMBOLS", "GENE", "id"]:
                try:
                  values[k] = float(v)
                except ValueError:
                  pass
            return {
              "submitter_id" : row["id"],
              "project_id" : "GDSC", 
              'method' : "MicroArray",
              'metric': "RMA",
              "values" : values
            }
    - lookup:
        tsv:
          input: "{{config.hugoFile}}"
          key: "Approved symbol"
          value: "Ensembl ID(supplied by Ensembl)"
        replace: values
    - objectValidate:
        schema: "{{config.schema}}"
        title: GeneExpression
    - emit:
        name: debug

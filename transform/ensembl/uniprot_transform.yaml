
class: sifter
name: uniprot

outdir: ../../output/ensembl

config:
  uniprotTSV:
    type: File
    default: ../../source/ensembl/Homo_sapiens.GRCh37.85.uniprot.tsv.gz
  schema:
    type: Dir
    default: ../../src/bmeg/bmeg-dictionary/gdcdictionary/schemas/
  genomeBuild:
    default: GRCh37

inputs:
  uniprot:
    tableLoad:
      input: "{{config.uniprotTSV}}"

pipelines:
  transform:
    - from: uniprot
    - project:
        mapping:
          protein_id: "{{row.protein_stable_id}}"
          submitter_id: "{{row.protein_stable_id}}"
          genome: "{{config.genomeBuild}}"
          project_id: Reference
          uniprot: "{{row.xref}}"
    - reduce:
        field: protein_id
        method: merge
        python: |

          def forceList(a):
            if not isinstance(a, list):
              return [a]
            return a

          def merge(x,y):
            x["uniprot"] = [x["uniprot"]] + [y["uniprot"]]
            return x

    #- objectCreate:
    #    schema: "{{config.schema}}"
    #    class: protein
    - emit:
        name: protein




class: sifter
name: depmap-expression
outdir: ../../output/depmap/

config:
  geneTable: ../../tables/gene2ensembl.translate.link.json.gz
  expressionFile: ../../source/depmap/OmicsExpressionProteinCodingGenesTPMLogp1.csv
  schema: ../../schema/

inputs:
  expression:
    tableLoad:
      input: "{{config.expressionFile}}"
      sep: ","

pipelines:
  values:
    - from: expression
    - map:
        method: fix
        gpython: |

          def fix(row):
            values = {}
            sub_id = ""
            for k, v in row.items():
              if k == "":
                sub_id = v
              else:
                t = k.split(" ")[1].replace("(", "").replace(")", "")
            return {
              "id" : sub_id,
              "aliquot" : [ {"id" : "aliquot/" + sub_id} ],
              "submitter_id" : sub_id,
              "project_id" : "Depmap",
              "metric" : "TPM_GENE",
              "method" : "Illumina HiSeq",
              "values": values
            }
    - lookup:
        replace: values
        json:
          input: "{{config.geneTable}}"
          key: GeneID
          value: Ensembl_gene_identifier
    - map:
        method: fix
        gpython: |
          def fix(row):
            values = {}
            for v, k in row["values"].items():
              if v.startswith("ENSG"):
                values[v] = k
            row["values"] = values
            return row
    - objectValidate:
        title: GeneExpression
        schema: "{{config.schema}}"
    - emit:
        name: expression
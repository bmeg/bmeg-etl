

class: sifter
name: depmap-mafs
outdir: ../../output/depmap/

config:
  mutationFile: ../../source/depmap/OmicsSomaticMutations.csv
  schema: ../../schema/

inputs:
  mutations:
    tableLoad:
      input: "{{config.mutationFile}}"
      sep: ","

pipelines:
  callsets:
    - from: mutations
    - distinct:
        value: "{{row.DepMap_ID}}"
    - project:
        mapping:
          id: "DepMap:DepMap:callset:{{row.DepMap_ID}}"
          submitter_id: "{{row.DepMap_ID}}"
          tumor_aliquot_id: "DepMap:DepMap:aliquot:{{row.DepMap_ID}}"
          aliquots:
            id: "DepMap:DepMap:callset:{{row.DepMap_ID}}"
          project_id: DepMap
    - objectValidate:
        schema: "{{config.schema}}"
        title: SomaticCallset
    - emit:
        name: SomaticCallset

  variants:
    - from: mutations
    - project:
        mapping:
          somatic_callset: 
            id: "{{row.id}}"
          allele: 
            id: "GRCh38:{{row.Chrom}}:{{row.Pos}}:{{row.Ref}}:{{row.Alt}}"
          ref: "{{row.Ref}}"
          alt: "{{row.Alt}}"
          t_ref_count: "{{row.RefCount}}"
          t_alt_count: "{{row.AltCount}}"
    - project:
        mapping:
          id: "DepMap:DepMap:{{row.somatic_callset}}--{{row.allele}}"
    - fieldType:
        t_depth: int
        t_ref_count: int
        t_alt_count: int
        n_depth: int
        n_ref_count: int
        n_alt_count: int
        start: int
    - objectValidate:
        schema: "{{config.schema}}"
        title: SomaticVariant
    - emit:
        name: SomaticVariant
  
  allele:
    - from: mutations
    - project:
        mapping:
          reference_bases: "{{row.Ref}}"
          alternate_bases: "{{row.Alt}}"
          genome: "GRCh38"
          chromosome: "{{row.Chrom}}"
          start: "{{row.Pos}}"
          project_id: "depmap"
    - fieldType:
        start: int
    - map: 
        method: fix
        gpython: |
          def fix(row):
            row['end'] = row['start'] + len(row['Ref'])
            return row
    - project:
        mapping:
          id: "{{row.genome}}:{{row.chromosome}}:{{row.start}}:{{row.reference_bases}}:{{row.alternate_bases}}"
    - clean:
        fields:
          - id
          - submitter_id
          - reference_bases
          - alternate_bases
          - genome
          - chromosome
          - start
          - end
          - project_id
    - objectValidate:
        title: Allele
        schema: "{{config.schema}}"
    - emit:
        name: allele


class: sifter
name: g2p
outdir: ../../output/g2p

config:
  association: ../../tables/g2pPrep.main.assocationPrep.json.gz
  schema: ../../schema
  treatmentSynonymsFile: ../../tables/pharmacodb_treatment.utable.final.json.gz
  synonymsFile: ../../tables/chemblSynonyms.longTable.synonyms.json


inputs:
  g2pData:
    plugin:
      commandline: "../../util/chembl-matchup.py -r {{config.association}} -i {{config.treatmentSynonymsFile}} -c {{config.synonymsFile}}"

pipelines:
  main:
    - from: g2pData
    - map:
        method: fix
        gpython: |
          def fix(row):
            if "chemblid" in row:
              row["compounds"] = [{"id": row["chemblid"]}]
            return row
    - objectValidate:
        title: GenePhenotypeAssociation
        schema: "{{config.schema}}"
    - emit:
        name: GenePhenotypeAssociation

  alleles:
    - from: main
    - filter:
        field: alleles
        check: exists
    - flatmap:
        method: flatten
        gpython: |
          def flatten(row):
            out = []
            for a in row["alleles"]:
              a["project_id"] = row["project_id"]
              out.append(a)
            return out

    - objectValidate:
        title: Allele
        schema: "{{config.schema}}"

    - emit:
        name: allele

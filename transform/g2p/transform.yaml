
class: sifter
name: g2p
outdir: ../../output/g2p/

config:
  base: ../../source/g2p/
  schema: ../../schema
  hugo: ../../tables/hugo2ensembl.tsv
  liftOver: ../../source/g2p/tables/hglft_genome_2749d_8437f0.bed
  synonymsFile: ../../tables/chemblSynonyms.longTable.synonyms.json.gz

inputs:
  g2pData:
    glob:
      input: "{{config.base}}/*.vr.json"
      jsonLoad: {}

pipelines:
  main:
    - from: g2pData
    - lookup:
        tsv:
          input: "{{config.hugo}}"
          key: "symbol"
          value: "id"
        replace: genes
    - map:
        method: feature_scan
        gpython:
          $ref: fix.py
      docs: Generate array of coordinate strings that will correspond to names of features found in liftover file
    - lookup:
        tsv:
          input: "{{config.liftOver}}"
          header:
            - chromosome
            - start
            - end
            - name
            - status
          key: name
        replace: locs
        copy:
          chromosome: chromosome
          start: start
          end: end
          name: name
      docs: Do lookup from BED file generated by Liftover
    - map:
        method: fix_record
        gpython:
          $ref: fix.py
   
    - project:
        mapping:
          id: "{{row.submitter_id}}"

    - map:
        method: prepChembl
        gpython:
          $ref: fix.py

    - emit:
        name: assocationPrep

  associations:
    - from: main
    - map:
        method: fix_compound_field
        gpython:
          $ref: fix.py
    - objectValidate:
        title: GenePhenotypeAssociation
        schema: "{{config.schema}}"
    - emit:
        name: GenePhenotypeAssociation

  alleles:
    - from: main
    - filter:
        field: alleles
        check: exists

    - flatmap:
        method: flatten
        gpython: 
          $ref: fix.py

    - objectValidate:
        title: Allele
        schema: "{{config.schema}}"

    - emit:
        name: Allele

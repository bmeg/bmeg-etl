class: sifter

name: cellosaurus
outdir: ../../output/cellosaurus/

config:
  oboFile: ../../source/cellosaurus/cellosaurus.obo
  schema: ../../schema
  ncit2mondo: ../../tables/ncit2mondo.ncit_extract.mapping.json.gz
inputs:
  oboData:
    plugin:
      commandLine: ../../util/obo_reader.py {{config.oboFile}}

pipelines:
  transform:
    - from: oboData
    - project:
        mapping:
          submitter_id: "{{row.id[0]}}"
          case_id: "{{row.id[0]}}"
          id: "{{row.id[0]}}"
          project_id: "cellosaurus"
    - map: 
        method: fix
        gpython: |
          def fix(row):
            for x in row.get("xref", []):
              if x.startswith("NCIt:"):
                row["ncit"] = "NCIT:" + x.split(":")[1]
              elif x.startswith("NCBI_TaxID:"):
                row["species"] = x.split(":")[-1]
            if "comment" in row:
              row["comment"] = row["comment"][0]
            for i in row.get("subset", []):
              if i in ["Male", "Female"]:
                row["sex"] = i
            return row
    - filter:
        field: species
        match: Homo sapiens
    - lookup:
        json:
          input: "{{config.ncit2mondo}}"
          key: ncit_id
        lookup: "{{row.ncit}}"
        copy:
          mondo_id: mondo_id
    - map:
        method: fix
        gpython: |
          def fix(row):
            if "mondo_id" in row:
              row["phenotypes"] = [{"id":row["mondo_id"]}]
            row["projects"] = [{"id": "project/cellosaurus"}]
            return row
    - objectValidate:
        schema: "{{config.schema}}"    
        title: Case   
    - emit:
        name: cases
